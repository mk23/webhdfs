#!/usr/bin/env python2.7

import argparse
import logging
import socket
import textwrap
import urlparse

from webhdfs.prompt import WebHDFSPrompt

LOG = logging.getLogger()

def create_log(logger=None):
    arg = {}
    log = logging.NullHandler()
    fmt = '%(asctime)s.%(msecs)03d%(module)20s:%(lineno)-3d %(threadName)-12s %(levelname)8s: %(message)s'

    if logger:
        url = urlparse.urlparse(logger)
        arg = urlparse.parse_qs(url.query)

        if url.scheme in ('file', '') and url.path:
            log = logging.handlers.WatchedFileHandler(url.path)
        elif url.scheme.startswith('syslog'):
            fmt = '%(module)s:%(lineno)d - %(threadName)s - %(message)s'
            if url.scheme == 'syslog+tcp':
                log = logging.handlers.SysLogHandler(address=(url.hostname or 'localhost', url.port or logging.handlers.SYSLOG_TCP_PORT), facility=arg.get('facility', ['user'])[0].lower(), socktype=socket.SOCK_STREAM)
            elif url.scheme == 'syslog+udp':
                log = logging.handlers.SysLogHandler(address=(url.hostname or 'localhost', url.port or logging.handlers.SYSLOG_UDP_PORT), facility=arg.get('facility', ['user'])[0].lower(), socktype=socket.SOCK_DGRAM)
            elif url.scheme == 'syslog+unix':
                log = logging.handlers.SysLogHandler(address=url.path or '/dev/log', facility=arg.get('facility', ['user'])[0].lower())
        elif url.scheme == 'console':
            log = logging.StreamHandler()

    log.setFormatter(logging.Formatter(fmt, '%Y-%m-%d %H:%M:%S'))

    LOG.addHandler(log)
    LOG.setLevel(getattr(logging, arg.get('level', ['info'])[0].upper()))

    LOG.info('logging started')

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='webhdfs shell', formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('-d', '--cwd',
                        help='initial hdfs directory')
    parser.add_argument('-l', '--log',
                        help='logger destination url')
    parser.add_argument('-c', '--cfg',
                        help='hdfs configuration dir')
    parser.add_argument('-t', '--timeout', type=float,
                        help='request timeout in seconds')
    parser.add_argument('url',
                        help='webhdfs base url')
    parser.epilog = textwrap.dedent('''
        supported logger formats:
          console://?level=LEVEL
          file://PATH?level=LEVEL
          syslog+tcp://HOST:PORT/?facility=FACILITY&level=LEVEL
          syslog+udp://HOST:PORT/?facility=FACILITY&level=LEVEL
          syslog+unix://PATH?facility=FACILITY&level=LEVEL
    ''')
    args = parser.parse_args()
    create_log(args.log)

    try:
        WebHDFSPrompt(args.url, args.cfg, args.cwd, args.timeout).cmdloop()
    except KeyboardInterrupt:
        print
